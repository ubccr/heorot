// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? // @db.Text
    access_token      String? // @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? // @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]

    username  String   @unique
    password  String
    role      String   @default("disabled")
    theme     String   @default("light")
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Hosts {
    host      String   @id @unique
    host_type String
    source    String
    redfish   Redfish?
    switch    Switch?
}

model Switch {
    id           String @id @default(uuid())
    host         String @unique
    manufacturer String
    serial       String
    model        String
    version      String

    Hosts      Hosts?            @relation(fields: [host], references: [host], onDelete: Cascade)
    interfaces InterfaceStatus[]
}

// *** Switches ***
model InterfaceStatus {
    id                   String   @id @default(uuid())
    port                 String? // heorot standard: blade / port / breakout | can be undefined for ports you don't want to render IE: vlan, portchannels, etc
    port_name            String
    port_mode            String?
    vlan_id              Int?
    vlan_info            String?
    speed                BigInt
    type                 String
    description          String
    auto_negotiation     Boolean?
    duplex               String
    link_status          String
    line_protocol_status String?

    host   String
    Switch Switch? @relation(fields: [host], references: [host], onDelete: Cascade)

    @@unique([host, port_name])
}

// *** Redfish ***
model Redfish {
    host         String @id @unique
    manufacturer String
    service_tag  String
    model        String
    bios_version String
    bmc_version  String

    Hosts Hosts? @relation(fields: [host], references: [host], onDelete: Cascade)
}
