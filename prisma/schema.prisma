// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

model User {
    username  String   @id @unique
    password  String
    role      String   @default("disabled")
    theme     String   @default("light")
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Hosts {
    host      String  @id @unique
    host_type String
    source    String
    //   redfish     Redfish?
    switch    Switch?
}

model Switch {
    id           String @id @default(uuid())
    host         String @unique
    manufacturer String
    serial       String
    model        String
    version      String

    Hosts      Hosts?            @relation(fields: [host], references: [host], onDelete: Cascade)
    interfaces InterfaceStatus[]
    // interface_config_backups InterfaceConfigBackups[]
    // config_backups           ConfigBackups[]
}

// *** Switches ***
model InterfaceStatus {
    id                   String   @id @default(uuid())
    port                 String? // heorot standard: blade / port / breakout | can be undefined for ports you don't want to render IE: vlan, portchannels, etc
    port_name            String
    port_mode            String?
    vlan_id              Int?
    vlan_info            String?
    speed                BigInt
    type                 String
    description          String
    auto_negotiation     Boolean?
    duplex               String
    link_status          String
    line_protocol_status String?

    host   String
    Switch Switch? @relation(fields: [host], references: [host], onDelete: Cascade)

    @@unique([host, port_name])
}

// model InterfaceConfigBackups {
//     id          String   @id @default(uuid())
//     host        String
//     description String
//     created_at  DateTime @default(now())
//     config      Bytes
//     switch      Switch?  @relation(fields: [host], references: [host])
// }

// model ConfigBackups {
//     id         String   @id @default(uuid())
//     host       String
//     created_at DateTime @default(now())
//     config     Bytes
//     switch     Switch?  @relation(fields: [host], references: [host])
// }
